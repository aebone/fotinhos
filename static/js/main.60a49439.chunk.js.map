{"version":3,"sources":["service/service.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomQuote","a","fetch","then","response","json","quotes","quotesLength","length","randomQuote","Math","floor","random","quote","App","useState","loadingPhoto","setLoadingphoto","loadindQuote","setLoadingQuote","photo","setPhoto","setQuote","window","addEventListener","event","document","querySelector","complete","useEffect","quoteObj","catch","error","console","log","className","id","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOAMaA,EAAc,uCAAG,kCAAAC,EAAA,sEACPC,MAAM,sFACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFD,cACtBC,EADsB,OAGtBC,EAAeD,EAAOE,OACxBC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GAAgB,EACvDM,EAAQP,EAAOG,GALO,kBAMrBI,GANqB,2CAAH,qD,OCyCZC,MA3Cf,WAEE,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,qBAA1B,mBAAOF,EAAP,KAAcS,EAAd,KAwBA,OArBAC,OAAOC,iBAAiB,QAAQ,SAAAC,GAClBC,SAASC,cAAc,OAClBC,UACPX,GAAgB,MAI5BY,qBAAU,WACR,IAAMT,EDlBO,gFADGV,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAC0D,OCmB5GS,EAASD,GACKpB,IACXG,MAAK,SAAC2B,GACLR,EAASQ,GACTX,GAAgB,MAEjBY,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZb,GAAgB,QAEnB,IAGD,sBAAKgB,UAAU,MAAf,UACInB,GAAgBE,GAAiB,yCAElCF,GAAgB,+CAChBE,GAAgB,+CAEjB,4BAAIL,GAASA,EAAMA,QACnB,qBAAKuB,GAAG,SAASC,IAAKjB,EAAOkB,IAAI,uBC7BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BX,M","file":"static/js/main.60a49439.chunk.js","sourcesContent":["export const getRandomCarlosImage = () => {\n  var randomPhoto = Math.floor(Math.random() * 148) + 1;\n  var photoUrl = \"https://raw.githubusercontent.com/alinebone/carlos-photos/main/images/carlos\" + randomPhoto + \".jpg\";\n  return photoUrl;\n}\n\nexport const getRandomQuote = async () => {\n  const quotes = await fetch(\"https://raw.githubusercontent.com/alinebone/alinebone.github.io/wisdom/wisdom.json\")\n    .then(response => response.json())\n  const quotesLength = quotes.length;\n  var randomQuote = Math.floor(Math.random() * quotesLength) + 1;\n  const quote = quotes[randomQuote];\n  return quote;\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getRandomCarlosImage, fetchData, getRandomQuote } from './service/service';\n\nfunction App() {\n\n  const [loadingPhoto, setLoadingphoto] = useState(true);\n  const [loadindQuote, setLoadingQuote] = useState(true);\n  const [photo, setPhoto] = useState();\n  const [quote, setQuote] = useState();\n\n\n  window.addEventListener(\"load\", event => {\n    var image = document.querySelector('img');\n    var load = image.complete;\n    if (load) setLoadingphoto(false);\n  });\n\n\n  useEffect(() => {\n    const photo = getRandomCarlosImage();\n    setPhoto(photo)\n    const quote = getRandomQuote()\n      .then((quoteObj) => {\n        setQuote(quoteObj)\n        setLoadingQuote(false)\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoadingQuote(false)\n      })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {(loadingPhoto && loadindQuote) && <h1>loading</h1>}\n\n      {loadingPhoto && <h1>loading photo</h1>}\n      {loadindQuote && <h1>loading quote</h1>}\n\n      <p>{quote && quote.quote}</p>\n      <img id=\"carlos\" src={photo} alt=\"Foto do Carlos\" />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}